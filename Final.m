close all;
clear all;
clc;

%Разбиение
n = input("Введите разбиение:\n");
%Какие точки
check = input("Введите какие точки хотите использовать: \nДля правых введите - 1\nДля средних введите - 2 \nДля левых введите - 3\n");

%Функция
x = 0:0.01:2;
y = x.^3;

%Определение настроек окна с графиками
figure("Name", "Integrals", 'units','normalized','outerposition',[0 0 1 1])

%Правые точки будут равнятся 2k/n и идти от k = 1 до n

%Средние точки будут равнятся 2k/n + 1/n и идти будет от k = 0 до n - 1
%Высота (2k/n + 1/n)^3

%Левые точки будут равнятся 2k/n и идти от k = 0 до n - 1
%Высота (2k/n)^3

%Сумма для n разбиения
sum_1 = 0;
%Заполнение нулями массивов для построения графика интегральной суммы
sqp = zeros(1, n); %Массив с позициями прямоугольников
sqh = zeros(1, n); %Массив с высотами прямоугольников
% Ширину прямоугольников Matlab подбирает автоматически
if check == 1
for k = 1:n
    %Позиция центра прямоугольника
    sqp(k) = 2 * k / n - 1 / n;
    %Значение высоты прямоугольника
    sqh(k) = 8 / n^3 * k^3;
    %Подсчет значения суммы
    sum_1 = sum_1 + 16 / n^4 * k^3;
end
where = "правых";
elseif check == 2
for k = 0:n-1
    sqp(k + 1) = 2 * k / n + 1 / n;
    sqh(k + 1) = (2 * k / n + 1 / n)^3;
    sum_1 = sum_1 + (2 * k / n + 1 / n)^3 / n * 2;
end
where = "средних";
else
for k = 0:n-1
    sqp(k + 1) = 2 * k / n + 1 / n;
    sqh(k + 1) = (2 * k / n)^3;
    sum_1 = sum_1 + (2 * k / n)^3 / n * 2;
end
where = "левых";
end
%Вывод в консоль
disp("Значение интегральной суммы для " + where + " точек разбиения n = " + int2str(n) + " равно: " + sprintf('%.4f', sum_1))
%Переход к следующей позиции графиков в окне
nexttile
%График суммы
bar(sqp,sqh, 1)
hold on;
%График функции
plot(x, y);
%Название графика
title("Значение интегральной суммы для " + where + " точек разбиения n = " + int2str(n) + " равно: " + sprintf('%.4f', sum_1))
hold off;

